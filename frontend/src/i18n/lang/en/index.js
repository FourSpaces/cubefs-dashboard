/**
 * Copyright 2023 The CubeFS Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

import enLocale from 'element-ui/lib/locale/lang/en'

export default {
  common: {
    account: 'Account ',
    action: 'Action ',
    add: 'Add ',
    all: 'all ',
    allocated: 'Allocated',
    available: 'Available ',
    batch: 'Batch Operation ',
    broken: 'Broken ',
    brokenmp: 'Broken MP',
    business: 'Business',
    c2load: 'Click to load',
    cancel: 'Cancel ',
    changepasswd: 'ChgPasswd',
    clear: 'Clear',
    cluster: 'Cluster ',
    code: 'Code ',
    confirmto: 'Confirm to ',
    copies: 'Copies',
    copy: 'Copy',
    create: 'Create ',
    created: 'Created ',
    createtime: 'CreateTime',
    curpath: 'CurrentPath',
    dashboard: 'Dashboard',
    data: 'Data',
    datablock: 'DataBlock',
    datanodes: 'DataNodes',
    datausage: 'DataUsage',
    delete: 'Delete ',
    deleted: 'Deleted ',
    dentries: 'Dentries',
    detail: 'Detail ',
    disk: 'Disk ',
    down: 'Down',
    download: 'Download ',
    duplicate: 'Duplicate',
    ec: 'EC ',
    ectypes: 'ECtypes',
    edit: 'Edit ',
    email: 'Email',
    events: 'events ',
    failed: 'failed',
    file: 'File ',
    filename: 'Filename',
    files: 'Files',
    filesize: 'Size',
    filetype: 'FileTypes',
    filters: 'Filters',
    folder: 'Folder',
    follower: 'Follower',
    free: 'Free',
    goback: 'Goback ',
    health: 'Health ',
    homepage: 'HomePage',
    host: 'Host',
    id: 'ID',
    idc: 'IDC ',
    itermperpages: 'ItemsPerPage',
    leader: 'Leader',
    list: 'list ',
    loading: 'Loading',
    login: 'Login ',
    management: 'Management ',
    master: 'MasterAddr',
    matched: 'matched',
    meta: 'Meta',
    metanodes: 'MetaNodes',
    metausage: 'MetaUsage',
    migrate: 'Migrate',
    modify: 'Modify ',
    modules: 'modules ',
    name: 'Name ',
    new: 'New ',
    next: 'Next',
    no: 'No',
    node: 'Node ',
    nodes: 'Nodes',
    nomoredata: 'No more data',
    notice: 'Notice ',
    off: 'Off ',
    offline: 'Offline ',
    old: 'Old ',
    on: 'On ',
    overview: 'Overview',
    partition: 'partition ',
    partitionid: 'Partition ID',
    partitions: 'Partitions',
    passwd: 'password',
    permissions: 'Permissions',
    phone: 'Phone',
    previous: 'Previous',
    privilege: 'Privilege ',
    quality: 'quality ',
    rack: 'Rack',
    refresh: 'refresh ',
    replica: 'Multi-replicas',
    required: 'Required',
    ro: 'RO',
    role: 'Role ',
    rule: 'Rule',
    run: 'Run',
    rw: 'R/W',
    scaledown: 'ScaleDown',
    scaleup: 'ScaleUp',
    search: 'Search',
    select: 'Please select',
    signoutsucc: 'Sign Out Successfully',
    signup: 'SignUp ',
    size: 'Size',
    status: 'Status ',
    stripe: 'Stripe ',
    submit: 'Submit ',
    success: 'Success',
    task: 'Task',
    tenant: 'Tenant ',
    timeout: 'Timeout',
    tips: 'Tips ',
    total: 'Total ',
    totalnum: 'Total',
    triplicate: 'Triplicate',
    type: 'type',
    unhealthy: 'Abnormal',
    update: 'Update ',
    updatetime: 'UpdateTime',
    upload: 'Upload ',
    usage: 'Usage',
    used: 'Used',
    user: 'User ',
    username: 'UserName',
    view: 'View',
    voltype: 'VolType',
    volume: 'Volume ',
    volumename: 'VolumeName',
    worksheet: 'Worksheet ',
    writable: 'Writable',
    xxsuc: 'successfully',
    yes: 'Yes',
    confirmdeletecluster: 'are you sure to delete the Cluster?',
    volumebelongsto: 'volume belongs to',
    transferownershipto: 'transfer ownership to',
  },
  button: {
    cancel: 'Cancel',
    create: 'Create',
    delete: 'Delete',
    export: 'Export',
    goback: 'Goback',
    refresh: 'Refresh',
    reset: 'Reset',
    search: 'Search',
    signin: 'Sign in',
    submit: 'Submit',
    upload: 'Upload',
  },
  rolemgt: {
    inputcode: 'Please enter role code',
    inputname: 'Please enter role name',
    inputrule: 'Only alphanumeric characters and underscores are allowed',
    tenantcheckedfirst: '"Manage tenants" should be checked first. Otherwise, it will not take effect',
  },
  usermgt: {
    accountrule: 'Only alphanumeric characters and underscores are allowed',
    chgpasswd: 'change password',
    illegalaccount: 'Wrong format of account! Please re-enter',
    illegalpasswd: 'Wrong format of password! Please re-enter',
    inputaccount: 'Please enter your account',
    inputemail: 'Please enter your email address',
    inputname: 'Please enter your user name',
    inputname2: 'Please enter your username, suggest using name or job number',
    inputnewpasswd: 'Please enter your new password',
    inputoldpasswd: 'Please enter your old password',
    inputpasswd: 'Please enter your password',
    inputphone: 'Please enter your phone number',
    passwdlen: 'Make sure the passphrase contains 8 to 16 characters',
    passwdrule: 'and only alphanumeric characters and special characters (~! @ # $% ^&* _.?) are allowed, and at least two or more types',
    updatesuc: 'change password successfully',
    wrongpasswd: 'Incorrect password format',
  },
  layout: {
    currentcluster: 'Current cluster',
    currentrole: 'Current role',
    help: 'Help',
    null: 'No',
    signout: 'SignOut',
    signoutsucc: 'Sign out successfully',
  },
  auth: {
    cluster: 'Cluster',
    clusterevents: 'Cluster Events',
    ec: 'EC',
    file: 'File',
    meta: 'Meta',
    multi_replicas: 'Multi_replicas',
    role: 'Role',
    user: 'User',
    volume: 'Volume',
  },
  router: {
    cluster: 'Cluster',
    clusterdetail: 'ClusterDetail',
    clusterlist: 'ClusterList',
    clusteroverview: 'ClusterOverview',
    data: 'Data',
    events: 'ClusterEvents',
    file: 'Files',
    meta: 'Meta',
    node: 'Nodes',
    noname: 'Unnamed',
    privilege: 'Privilege',
    role: 'Role',
    uploadlist: 'UploadList',
    user: 'User',
    volume: 'Volume',
    volumelist: 'VolumeList',
  },
  status: {
    diskoffline: 'disk offline',
  },
  component: {
    applyinfo: 'Apply info',
    approvalinfo: 'Approval info',
    approvalres: 'Approval results',
    filters: 'Filter Conditions',
    goback: 'Go Back',
    moremg: 'MoreAction',
    nodata: 'No data',
    otherinfo: 'Other info',
    regionrinfo: 'Region info',
    remark: 'Remark',
  },
  filemanage: {
    allowheaders: 'Allowed Headers',
    allowheadertips: 'You can set multiple allowed headers and separated by comma. Up to one wildcard (*)',
    allowmethods: 'Allowed Methods',
    back2list: 'Goback to List',
    cachetime: 'Cache Timeout(s)',
    cancelmanually: 'Cancel manually',
    choosemethods: 'Select Methods',
    corscfg: 'CORS configure',
    createfolder: 'Create Folder',
    deleteall: 'Confirm to delete all',
    entersource: 'Please enter the source',
    exposedheaders: 'Exposed Headers',
    exposedheadertips: 'You can set multiple exposed headers and separated by comma. But cannot contain wildcards (*).',
    filemg: 'file manage',
    infrqac: 'Infrequence Access',
    input: 'Please input',
    lacksign: 'Request params lack key: putSignUrl',
    lacksignurl: 'Unable to retrieve pre signed url from the API. Please check if the interface or getDataFun method is correct',
    norepeatedlyup: 'No upload repeatedly',
    nos3: 'no s3, please configure it in resource management page',
    onewildcard: 'Up to one be wildcard(*) is allowed',
    puttime: 'Put Time',
    s3needed: 'S3 should be configured before manage files',
    s3ornot: 'S3 or not',
    searchtips: 'Enter a prefix, only search in the current path',
    select: 'Please select',
    source: 'Source',
    sourcetips: 'You can set multiple sources and separated by comma. Up to one wildcard (*) but not suggest',
    standard: 'Standard',
    tenant: 'Tenant',
    tips1: 'You should configure CORS policy first before manage files, and request domain must be in the source list, e.g.',
    upaddr: 'Upload to ',
    whichcluster: 'Cluster',
  },
  clusterinfo: {
    masteraddr: 'Master address',
  },
  volume: {
    cachesize: 'Cache size',
    choosecopy2or3: 'Triplicate or duplicate',
    copymiss: 'The partition has copy miss',
    cursize: 'Current Size',
    dgzx: 'DGZX',
    dpsuc: 'DP create successfully',
    grantsuc: 'Grant privileges successfully',
    infreqcachesize: 'Infrequent access storage cache size',
    infreqcachethreshold: 'Infrequent access storage cache Threshold',
    infreqcachetimeout: 'Infrequent access storage cache timeout',
    inputbusiness: 'Enter the business name',
    inputcachesize: 'Enter the cache size',
    inputmetaparsize: 'Enter the size',
    inputparid: 'Enter partition ID',
    inputquality: 'Enter the quality',
    inputsize: 'Enter size',
    inputsize2greater: 'Entered size can not greater than current size',
    inputsize2less: 'Entered size can not less than current size',
    inputvolume: 'Enter volume name',
    leadermiss: 'The partition has leader miss',
    metaparsize:'Meta partition size',
    mpstatus: 'MP Status',
    mpsuc: 'MP create successfully',
    selectowner: 'Please select the owner',
    selectpermission: 'Please select the privilege',
    tarsize: 'Target Size',
    up50: 'max is 50',
    volumecachesize: 'Cache size of Volume',
    volumecachettl: 'Cache TTL of Volume',
    volumenamerule: 'Must begin with a letter, and can only contain underscores, alphanumeric characters or short dashes',
    confirmdeletevol: 'are you sure to delete the volume?',
    confirmdeletetenant: 'are you sure to delete the tenant',
    confirmdeletepolicies: 'are you sure to clear the policies？',
  },
  tenant: {
    createtenantsuc: 'Create tenant successfully',
    idrule: 'Must begin with a letter, and can only contain underscores or alphanumeric characters',
    inputdescrp: 'Enter the tenant descriptive',
    inputtenantid: 'Enter the tenant ID',
    tenantdescrp: 'Tenant descriptive:',
    tenantid: 'Tenant ID',
  },
  resource: {
    alldiskhealth: 'All disks health',
    autooffline: 'Sucessful approval will trigger the service offline',
    baddiskct: 'Bad disk/total disk',
    brokenjob: 'Applied for set broken successful. Please go to the cloud work to view the approval details',
    chooseaction: 'Choose action',
    choosedisk: 'Choose at least a disk to offline',
    cloudjobs: 'Applied for offline service operation successful. Please go to the cloud work to view the approval details',
    confirmbatchoffline: 'Confirm to offline in batches?',
    confirmregistdisk: 'Confirm to regist this disk?',
    confirmsetbroken: 'Confirm to set the disk as broken',
    diskofflinetips1: '<span>Confirm to offline these <span style="color: #f5222d">',
    diskofflinetips2: ' disks under this node. Total number: ',
    diskpath: 'Disk location' ,
    diskregist: 'Disk Regist',
    diskunhealth: 'disks can not write in',
    dstaddr: 'Dst addr',
    ecbgtasks: 'EC background tasks',
    healthlevel: 'Health level',
    inputdiskpath: 'Enter the partition ID or disk path',
    inputnodeip: 'Enter the node ip',
    inputnodesetid: 'Enter the nodesetid',
    inputvolumeid: 'Enter the volume id',
    inwritingstrip: 'Stripe in writing',
    inwritingstripecnt: 'In writing stripe(Cnt)',
    inwritingstripeid: 'In writing stripe(ID)',
    least1: 'At least select one',
    migratesuc: 'Migrate successfully',
    nodeaddr: 'Node addr',
    nodeid: 'Node ID',
    nodemigrate: ' node migrate',
    offlineconfirm: 'Confirm to offline this partition ',
    offlinenodeconfirm: 'Confirm to offline this node ',
    offlinenodedisk: 'Confirm to offline the disk of this node?',
    registsuc: 'Regist successfully',
    rwrochgtips1: '<span>Confirm to change these <span style="color: #f5222d">',
    rwrochgtips2: ' disks</span> to <span style="color: #f5222d">',
    rwrochgtips3: ' </span>? Total number: ',
    selectdst: 'Select the dst addr',
    selectvol: 'Select the volume',
    setbroken: 'Set Broken',
    setbrokenjobonfly: 'The worksheet of set broken is in approval',
    setdiskstatus: 'Confirm to change the disk type to ',
    setsuc: 'Set success',
    srcaddr: 'Src addr',
    stripedetail: 'Stripe groups detail',
    tasksin20min: 'Task status in the past 20 mins',
  },
  cfsclusteroverview: {
    attacheccluster: 'has blobstore or not',
    blobstoreaddr: 'blobstore addr',
    bsaddrrule: 'Enter blobstore addr, must start with http scheme. e.g. (http|https)://ip:port',
    clustername: 'ClusterName',
    datasize: 'DataSize',
    datausage: 'DataUsage',
    dataused: 'DataUsed',
    illegaladdr: 'illegal address',
    illegalip: 'Illegal ip',
    inputbsaddr: 'Enter blobstore addr',
    inputcli: 'Enter cli',
    inputclustername: 'Enter cluster name',
    inputidc: 'Enter a IDC name',
    inputmasteraddr: 'Enter master addr',
    inputmasteraddrrule: 'Enter master addr like ip:port(multiple address are separated by return). e.g. 1.1.1.1:10086',
    masteraddress: 'MasterAddr',
    metasize: 'MetaSize',
    metausage: 'MetaUsage',
    metaused: 'MetaUsed',
    s3address: 'S3Addr',
    s3addrrule: 'Enter a s3 endpoint address which must start with protocol header, such as (http|https)://(ip:port)|domain',
    tag: 'Tag',
    volumetype: 'Please choose volume type',
  },
  privileges: {
    AUTH_ROLE_CREATE: 'add role', // '添加角色',
    AUTH_ROLE_DELETE: 'delete role', // '删除角色',
    AUTH_ROLE_UPDATE: 'edit role', // '编辑角色',
    AUTH_USER_CREATE: 'create user', // '添加用户',
    AUTH_USER_DELETE: 'delete user', //'删除用户',
    AUTH_USER_PASSWORD_UPDATE: 'change password', // '修改用户密码',
    AUTH_USER_UPDATE: 'edit user', // '编辑用户',
    BLOBSTORE_CONFIG_SET: 'enable/disable', // '开启/关闭',
    BLOBSTORE_DISKS_ACCESS: 'disk-rw/ro', // '磁盘-切读写/只读',
    BLOBSTORE_DISKS_PROBE: 'probe disks', // '注册磁盘',
    BLOBSTORE_DISKS_SET: 'bad disk', // '设置坏盘',
    BLOBSTORE_NODES_ACCESS: 'node-rw/ro', // '节点-切读写/只读',
    CFS_DATANODE_DECOMMISSION: 'datanode offline', // '节点下线',
    CFS_DATANODE_MIGRATE: 'datanode migration', // '节点迁移',
    CFS_DATAPARTITION_DECOMMISSION: 'detail-data partition offline', // '节点详情-分区下线',
    CFS_DISKS_DECOMMISSION: 'detail-disk offline', // '节点详情-磁盘下线',
    CFS_METANODE_DECOMMISSION: 'MDS offline', // '节点下线',
    CFS_METANODE_MIGRATE: 'MDS migration', // '节点迁移',
    CFS_METAPARTITION_DECOMMISSION: 'detail-meta partition offline', // '节点详情-分区下线',
    CFS_S3_DIRS_CREATE: 'create folder', // '新建文件夹',
    CFS_S3_FILES_DOWNLOAD_SIGNEDURL: 'download', // 下载文件',
    CFS_S3_FILES_UPLOAD_SIGNEDURL: 'upload', // '上传文件',
    CFS_USERS_CREATE: 'tenants-create', // '租户管理-创建租户',
    CFS_USERS_DELETE: 'tenants-delete', // '租户管理-删除租户',
    CFS_USERS_LIST: 'manage tenants', // '租户管理',
    CFS_USERS_POLICIES: 'volume grant', // '卷授权',
    CFS_USERS_POLICIES_DELETE: 'delete volume grant', // '删除卷授权'
    CFS_USERS_VOLS_TRANSFER: 'volume transfer', // '卷转移'
    CFS_VOLS_CREATE: 'create volume', // '创建卷',
    CFS_VOLS_EXPAND: 'volume scaleup', // '卷扩容',
    CFS_VOLS_SHRINK: 'volume scaledown', // '卷缩容',
    CFS_VOLS_DELETE: 'volume delete',
    CFS_VOLS_UPDATE: 'edit EC', // '编辑纠删码卷',
    CLUSTER_CREATE: 'create cluster', // '上架集群',
    CLUSTER_UPDATE: 'edit cluster', // '修改集群',
    CLUSTER_DELETE: 'delete cluster' // '删除集群'
  },
  ...enLocale
}
